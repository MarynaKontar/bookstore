spring.thymeleaf.cache=false

# ======================================
# = DATA SOURCE
# ======================================
#mysql://b4403ede73e2ec:a8e7f6d1@eu-cdbr-west-01.cleardb.com/heroku_e3c87b573367400?reconnect=true
# Set here configurations for the database connection
#spring.datasource.url=jdbc:mysql://localhost:3306/bookstoredatabase?useSSL=false
spring.datasource.url=jdbc:mysql://eu-cdbr-west-01.cleardb.com:3306/heroku_e3c87b573367400?reconnect=true


#Username and secret
#spring.datasource.username=root
#spring.datasource.password=123581321lL
spring.datasource.username=b4403ede73e2ec
spring.datasource.password=a8e7f6d1

#Keep the connection alive if idle(вхолостую) for a long time (needed in production)
spring.datasource.testWhileIdle=true
#spring.datasource.tomcat.test-while-idle=true
spring.datasource.validationQuery=SELECT 1


# ======================================
# = JPA / HIBERNATE
# ======================================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernateto generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



# ======================================
# = EMAIL
# ======================================

spring.mail.host=smtp.gmail.com
spring.mail.username=marina.acoustic@gmail.com
spring.mail.password=MiVzy11l
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=marina.acoustic@gmail.com